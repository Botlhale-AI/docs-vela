"use strict";(self.webpackChunkvela_documentation=self.webpackChunkvela_documentation||[]).push([[7664],{9581:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>_,contentTitle:()=>q,default:()=>P,frontMatter:()=>I,metadata:()=>S,toc:()=>U});var t=r(4848),a=r(8453),s=r(6540),l=r(4164),i=r(3104),o=r(6347),d=r(205),c=r(7485),u=r(1682),h=r(9466);function p(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function f(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:r}=e;const t=(0,o.W6)(),a=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function m(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,a=x(e),[l,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[o,c]=j({queryString:r,groupId:t}),[u,p]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,a]=(0,h.Dv)(r);return[t,(0,s.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:t}),m=(()=>{const e=o??u;return f({value:e,tabValues:a})?e:null})();(0,d.A)((()=>{m&&i(m)}),[m]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!f({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),p(e)}),[c,p,a]),tabValues:a}}var g=r(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:r,selectedValue:a,selectValue:s,tabValues:o}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,r=d.indexOf(n),t=o[r].value;t!==a&&(c(n),s(t))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=d.indexOf(e.currentTarget)+1;n=d[r]??d[0];break}case"ArrowLeft":{const r=d.indexOf(e.currentTarget)-1;n=d[r]??d[d.length-1];break}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>d.push(e),onKeyDown:h,onClick:u,...s,className:(0,l.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function y(e){let{lazy:n,children:r,selectedValue:a}=e;const l=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=m(e);return(0,t.jsxs)("div",{className:(0,l.A)("tabs-container",b.tabList),children:[(0,t.jsx)(v,{...e,...n}),(0,t.jsx)(y,{...e,...n})]})}function A(e){const n=(0,g.A)();return(0,t.jsx)(w,{...e,children:p(e.children)},String(n))}const T={tabItem:"tabItem_Ymn6"};function k(e){let{children:n,hidden:r,className:a}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,l.A)(T.tabItem,a),hidden:r,children:n})}const I={sidebar_position:8},q=void 0,S={id:"Data Upload",title:"Data Upload",description:"Data Upload",source:"@site/docs/Data Upload.md",sourceDirName:".",slug:"/Data Upload",permalink:"/docs/Data Upload",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Smart Detector",permalink:"/docs/Smart Detector"}},_={},U=[{value:"Data Upload",id:"data-upload",level:2},{value:"Vela Integration",id:"vela-integration",level:2},{value:"Calls",id:"calls",level:2},{value:"Chats",id:"chats",level:2},{value:"Contact us",id:"contact-us",level:2}];function V(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"data-upload",children:"Data Upload"}),"\n",(0,t.jsx)(n.p,{children:"The Vela platform offers two methods for uploading your call data, depending on your current storage solution:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Automatic Upload via FTP:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Suitable for:"})," Users who store call data on an FTP server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Benefits:"})," Automated updates, no manual intervention required."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An FTP server where your call data resides."}),"\n",(0,t.jsx)(n.li,{children:"Shared access credentials provided to Botlhale AI during onboarding."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Process:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"During onboarding, share access credentials for your FTP server with Botlhale AI."}),"\n",(0,t.jsx)(n.li,{children:"Botlhale AI establishes a connection and synchronises your call data automatically."}),"\n",(0,t.jsxs)(n.li,{children:["Call data appears in the ",(0,t.jsx)(n.code,{children:"Calls"})," screen on the Vela platform."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Manual Batch Upload"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Suitable for"}),": Users who do not store call data on an FTP server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),": Flexible uploading for various data sources."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Process:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate to the ",(0,t.jsx)(n.code,{children:"Calls"})," screen on the Vela platform."]}),"\n",(0,t.jsxs)(n.li,{children:["Click the ",(0,t.jsx)(n.code,{children:"Batch Upload"})," button."]}),"\n",(0,t.jsx)(n.li,{children:"Select and upload a zip file containing your call data."}),"\n",(0,t.jsxs)(n.li,{children:["Click ",(0,t.jsx)(n.code,{children:"Upload"})," to initiate the process."]}),"\n",(0,t.jsxs)(n.li,{children:["Upon successful upload, your call data appears in the ",(0,t.jsx)(n.code,{children:"Calls"})," screen table."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"TECHNICAL NOTES:",type:"note",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Both methods support uploading various call data formats, including CSV, TSV, and JSON."}),"\n",(0,t.jsx)(n.li,{children:"The batch upload function accepts zip files with a maximum size of 3 GB."}),"\n",(0,t.jsx)(n.li,{children:"For larger datasets, consider contacting Botlhale AI support for alternative upload options. Ensure your call data adheres to the specified format and schema requirements for successful processing."}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"vela-integration",children:"Vela Integration"}),"\n",(0,t.jsx)(n.h1,{id:"vela-apis",children:"Vela APIs"}),"\n",(0,t.jsx)(n.h2,{id:"calls",children:"Calls"}),"\n",(0,t.jsx)(n.admonition,{title:"important",type:"tip",children:(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["You need to include an ",(0,t.jsx)(n.code,{children:"Authentication Token"})," in request headers. See the ",(0,t.jsx)(n.a,{href:"API.md#authentication",children:"Authentication"})," page of this documentation for information on how to generate authentication token codes."]}),"\n"]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Endpoint URL:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"https://api.botlhale.xyz/asr/async/upload/vela\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),"\r\nThis API endpoint generates a presigned URL and associated credentials that allow for the secure upload of a call recording. This feature is designed for integration with Vela, enabling organizations to seamlessly upload call data for processing."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Requirement"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"org_id"}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Identifier for the organization submitting the call."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"metadata"}),(0,t.jsx)(n.td,{children:"Optional"}),(0,t.jsx)(n.td,{children:"A JSON containing the information below."})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"email"}),": Email address of the agent who participated in the call."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"date_of_call"}),": The date when the call took place."]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"Endpoint Behaviour"})}),(0,t.jsxs)(n.p,{children:["Before generating the presigned URL and upload credentials, the endpoint forwards the provided ",(0,t.jsx)(n.code,{children:"org_id"}),", ",(0,t.jsx)(n.code,{children:"email"}),", and ",(0,t.jsx)(n.code,{children:"date_of_call"})," to Vela for logging and processing. Vela responds with ",(0,t.jsx)(n.code,{children:"minute_allocation"})," and ",(0,t.jsx)(n.code,{children:"voice_id"})," statuses. The API performs the following checks:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minute Allocation Check:"})," The API verifies if the organization (",(0,t.jsx)(n.code,{children:"org_id"}),") is within its ",(0,t.jsx)(n.code,{children:"minute_allocation"}),". If the organization has exceeded its allocation, an error is thrown."]}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Response Format"}),": The response returns a JSON object containing a presigned URL and the necessary fields for secure data upload to an AWS S3 bucket."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Sample Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n    "fields": {\r\n        "key": "<key>",\r\n        "policy": "<policy>",\r\n        "x-amz-algorithm": "<>",\r\n        "x-amz-credential": "<>",\r\n        "x-amz-date": "<>",\r\n        "x-amz-security-token": "<>",\r\n        "x-amz-signature": "<>"\r\n    },\r\n    "url": "upload_url"\r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Integrate this API into your application to request a presigned URL, which allows you to upload call recordings to the specified ",(0,t.jsx)(n.code,{children:"upload_url"})," securely using the provided credentials and fields. Using the ",(0,t.jsx)(n.code,{children:"upload_url"})," works the same as a normal upload."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Upload via Presigned URL"})}),"\n",(0,t.jsxs)(n.p,{children:["The generated presigned URL includes both a URL and additional fields that must be passed as part of the subsequent ",(0,t.jsx)(n.code,{children:"HTTP POST"})," request. The following code demonstrates how to use the requests package with a presigned POST URL to perform a ",(0,t.jsx)(n.code,{children:"POST"})," request for file upload."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request Example"})}),"\n",(0,t.jsxs)(A,{children:[(0,t.jsx)(k,{value:"py",label:"Python",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"import requests\r\n\r\nurl = \"{{uploadUrl}}\"\r\n\r\npayload = {'AWSAccessKeyId': '{{fields-AWSAccessKeyId}}',\r\n'key': '{{fields-key}}',\r\n'policy': '{{fields-policy}}',\r\n'signature': '{{fields-signature}}',\r\n'x-amz-security-token': '{{fields-x-amz-security-token}}'}\r\nfiles=[\r\n  ('file',('tts_aw215n3s4ni4_IsiZulu_H127Bqf8aN08.wav',open('KpALthHva/tts_aw215n3s4ni4_IsiZulu_H127Bqf8aN08.wav','rb'),'audio/wav'))\r\n]\r\nheaders = {}\r\n\r\nresponse = requests.request(\"POST\", url, headers=headers, data=payload, files=files)\r\n\r\nprint(response.text)\r\n\n"})})}),(0,t.jsx)(k,{value:"nodejs",label:"NodeJs - Request",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"var request = require('request');\r\nvar fs = require('fs');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': '{{uploadUrl}}',\r\n  'headers': {\r\n  },\r\n  formData: {\r\n    'AWSAccessKeyId': '{{fields-AWSAccessKeyId}}',\r\n    'key': '{{fields-key}}',\r\n    'policy': '{{fields-policy}}',\r\n    'signature': '{{fields-signature}}',\r\n    'x-amz-security-token': '{{fields-x-amz-security-token}}',\r\n    'file': [\r\n      fs.createReadStream('KpALthHva/tts_aw215n3s4ni4_IsiZulu_H127Bqf8aN08.wav')\r\n    ]\r\n  }\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n\r\n\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"chats",children:"Chats"}),"\n",(0,t.jsx)(n.h2,{id:"contact-us",children:"Contact us"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["We are here to help! Please ",(0,t.jsx)(n.a,{href:"mailto:support@botlhale.ai",children:"contact us"})," with any questions."]})})]})}function P(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(V,{...e})}):V(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var t=r(6540);const a={},s=t.createContext(a);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);